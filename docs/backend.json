{
  "entities": {
    "Experiment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Experiment",
      "type": "object",
      "description": "Represents a single lab experiment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the experiment."
        },
        "title": {
          "type": "string",
          "description": "Title of the experiment."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the experiment's purpose and methodology."
        },
        "dateCreated": {
          "type": "string",
          "description": "Date and time when the experiment was created.",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "description": "Date and time when the experiment was last modified.",
          "format": "date-time"
        },
        "scientistIds": {
          "type": "array",
          "description": "References to Scientists collaborating on the experiment. (Relationship: Experiment N:N Scientist)",
          "items": {
            "type": "string"
          }
        },
        "sopIds": {
          "type": "array",
          "description": "References to Standard Operating Procedures (SOPs) used in the experiment. (Relationship: Experiment 1:N SOP)",
          "items": {
            "type": "string"
          }
        },
        "regulatoryReportIds": {
          "type": "array",
          "description": "References to Regulatory Reports associated with the experiment. (Relationship: Experiment 1:N RegulatoryReport)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "dateCreated",
        "lastModified"
      ]
    },
    "Scientist": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Scientist",
      "type": "object",
      "description": "Represents a scientist using the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the scientist."
        },
        "name": {
          "type": "string",
          "description": "Full name of the scientist."
        },
        "email": {
          "type": "string",
          "description": "Email address of the scientist.",
          "format": "email"
        },
        "organization": {
          "type": "string",
          "description": "Organization the scientist belongs to."
        },
        "experimentIds": {
          "type": "array",
          "description": "References to Experiments the scientist is working on. (Relationship: Scientist N:N Experiment)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "organization"
      ]
    },
    "SOP": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SOP",
      "type": "object",
      "description": "Represents a Standard Operating Procedure.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the SOP."
        },
        "title": {
          "type": "string",
          "description": "Title of the SOP."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the SOP."
        },
        "version": {
          "type": "string",
          "description": "Version of the SOP."
        },
        "datePublished": {
          "type": "string",
          "description": "Date when the SOP was published.",
          "format": "date-time"
        },
        "experimentId": {
          "type": "string",
          "description": "Reference to Experiment. (Relationship: SOP 1:N Experiment)"
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "version",
        "datePublished"
      ]
    },
    "RegulatoryReport": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "RegulatoryReport",
      "type": "object",
      "description": "Represents a regulatory report.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the regulatory report."
        },
        "title": {
          "type": "string",
          "description": "Title of the regulatory report."
        },
        "dateGenerated": {
          "type": "string",
          "description": "Date when the report was generated.",
          "format": "date-time"
        },
        "content": {
          "type": "string",
          "description": "Content of the regulatory report (e.g., as Markdown or HTML)."
        },
        "experimentId": {
          "type": "string",
          "description": "Reference to Experiment. (Relationship: RegulatoryReport 1:N Experiment)"
        }
      },
      "required": [
        "id",
        "title",
        "dateGenerated",
        "content"
      ]
    },
    "WaitlistEntry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WaitlistEntry",
      "type": "object",
      "description": "Represents an entry in the waitlist.",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of the person on the waitlist."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the person on the waitlist."
        },
        "email": {
          "type": "string",
          "description": "Email address of the person on the waitlist.",
          "format": "email"
        },
        "date": {
          "type": "string",
          "description": "Date when the person joined the waitlist.",
          "format": "date-time"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "date"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/experiments/{experimentId}",
        "definition": {
          "entityName": "Experiment",
          "schema": {
            "$ref": "#/backend/entities/Experiment"
          },
          "description": "Stores data for each experiment.  Includes `scientistIds` array for authorization purposes (denormalization for authorization independence).",
          "params": [
            {
              "name": "experimentId",
              "description": "Unique identifier for the experiment."
            }
          ]
        }
      },
      {
        "path": "/scientists/{scientistId}",
        "definition": {
          "entityName": "Scientist",
          "schema": {
            "$ref": "#/backend/entities/Scientist"
          },
          "description": "Stores data for each scientist.",
          "params": [
            {
              "name": "scientistId",
              "description": "Unique identifier for the scientist."
            }
          ]
        }
      },
      {
        "path": "/sops/{sopId}",
        "definition": {
          "entityName": "SOP",
          "schema": {
            "$ref": "#/backend/entities/SOP"
          },
          "description": "Stores data for each standard operating procedure.",
          "params": [
            {
              "name": "sopId",
              "description": "Unique identifier for the SOP."
            }
          ]
        }
      },
      {
        "path": "/regulatoryReports/{regulatoryReportId}",
        "definition": {
          "entityName": "RegulatoryReport",
          "schema": {
            "$ref": "#/backend/entities/RegulatoryReport"
          },
          "description": "Stores data for each regulatory report.",
          "params": [
            {
              "name": "regulatoryReportId",
              "description": "Unique identifier for the regulatory report."
            }
          ]
        }
      },
      {
        "path": "/waitlist/{waitlistId}",
        "definition": {
          "entityName": "WaitlistEntry",
          "schema": {
            "$ref": "#/backend/entities/WaitlistEntry"
          },
          "description": "Stores data for each waitlist entry.",
          "params": [
            {
              "name": "waitlistId",
              "description": "Unique identifier for the waitlist entry."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to store data related to lab experiments, scientists, SOPs, and regulatory reports. It focuses on clarity, security, and scalability. Relationships between entities like Experiments and Scientists are managed through document references and arrays of IDs. This avoids the need for get() calls in security rules by denormalizing relevant authorization data. For instance, experiment documents contain scientistIds, allowing access control based on the presence of a user's ID in this array without needing to fetch related scientist documents. Different data types with varying access requirements are stored in separate collections. This includes experiments, scientists, sops, and regulatoryReports. This segregation simplifies security rules by ensuring that each collection has a homogeneous security posture. Access to experiment data is controlled through the scientistIds array. A user can access the experiment data if their user ID is present in the scientistIds array. The design enables secure list operations. Because authorization information is denormalized within each document, security rules can efficiently filter documents based on the current user's access without needing to perform expensive get() operations. The segregation of data into separate collections further supports secure listing by ensuring that listing operations only return data that the user is authorized to access."
  }
}
